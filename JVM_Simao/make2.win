# Project: JVM_Partes
# Makefile created by Dev-C++ 4.9.9.2

CPP  = g++.exe -D__DEBUG__
CC   = gcc.exe -D__DEBUG__
WINDRES = windres.exe
RES  = 
OBJ  = main.o operacaoBits.o operacaoListas.o constant_pool.o class_loader.o operacoesFrame.o function.o operacoesPilhas.o simulation.o funcsG.o funcsR.o loads.o mnemonics.o $(RES)
LINKOBJ  = main.o operacaoBits.o operacaoListas.o constant_pool.o class_loader.o operacoesFrame.o function.o operacoesPilhas.o simulation.o funcsG.o funcsR.o loads.o mnemonics.o $(RES)
LIBS =  -L"C:/Dev-Cpp/lib"  -g3 
INCS =  -I"C:/Dev-Cpp/include" 
CXXINCS =  -I"C:/Dev-Cpp/lib/gcc/mingw32/3.4.2/include"  -I"C:/Dev-Cpp/include/c++/3.4.2/backward"  -I"C:/Dev-Cpp/include/c++/3.4.2/mingw32"  -I"C:/Dev-Cpp/include/c++/3.4.2"  -I"C:/Dev-Cpp/include" 
BIN  = JVM_Partes.exe
CXXFLAGS = $(CXXINCS)   -g3
CFLAGS = $(INCS) -std=c99    -g3
RM = rm -f

.PHONY: all all-before all-after clean clean-custom

all: all-before JVM_Partes.exe all-after


clean: clean-custom
	${RM} $(OBJ) $(BIN)

$(BIN): $(OBJ)
	$(CC) $(LINKOBJ) -o "JVM_Partes.exe" $(LIBS)

main.o: main.c
	$(CC) -c main.c -o main.o $(CFLAGS)

operacaoBits.o: operacaoBits.c
	$(CC) -c operacaoBits.c -o operacaoBits.o $(CFLAGS)

operacaoListas.o: operacaoListas.c
	$(CC) -c operacaoListas.c -o operacaoListas.o $(CFLAGS)

constant_pool.o: constant_pool.c
	$(CC) -c constant_pool.c -o constant_pool.o $(CFLAGS)

class_loader.o: class_loader.c
	$(CC) -c class_loader.c -o class_loader.o $(CFLAGS)

operacoesFrame.o: operacoesFrame.c
	$(CC) -c operacoesFrame.c -o operacoesFrame.o $(CFLAGS)

function.o: function.c
	$(CC) -c function.c -o function.o $(CFLAGS)

operacoesPilhas.o: operacoesPilhas.c
	$(CC) -c operacoesPilhas.c -o operacoesPilhas.o $(CFLAGS)

simulation.o: simulation.c
	$(CC) -c simulation.c -o simulation.o $(CFLAGS)

funcsG.o: funcsG.c
	$(CC) -c funcsG.c -o funcsG.o $(CFLAGS)

funcsR.o: funcsR.c
	$(CC) -c funcsR.c -o funcsR.o $(CFLAGS)

loads.o: loads.c
	$(CC) -c loads.c -o loads.o $(CFLAGS)

mnemonics.o: mnemonics.c
	$(CC) -c mnemonics.c -o mnemonics.o $(CFLAGS)
